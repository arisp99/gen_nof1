% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nof1gen.wrap.R
\name{gen_wrap}
\alias{gen_wrap}
\title{Function to run the analysis}
\usage{
gen_wrap(dataset)
}
\arguments{
\item{dataset}{the dataset the analysis will be conducted on.}
}
\value{
The function returns some useful information about the simulation.
We have two different categories of information: system_info and model_results.
\item{system_info}{Provides information about the clincical trial conducted}
\item{enough_data}{A boolean that tells us whether the number length of the
 treatment vector and observation vectors are the same}
\item{user_id}{The user id for the particular patient whose data was analyzed}
\item{trigger}{The trigger the study was examining}
\item{design}{How the study was designed. How many weeks of treatment A? Of
 treatment B?}
\item{model_results}{For each observation provides information about the model results}
\item{input_mean}{The mean of the data inputed}
\item{input_median}{The median of the data inputed}
\item{treat_mean}{The mean of the data outputed for each treatment type}
\item{treat_median}{The median of the data outputed for each treatment type}
\item{coef_mean}{The mean of the data outputed for each coefficient}
\item{coef_median}{The median of the data outputed for each coefficient}
\item{treat_greater_zero}{The probability that the output value is greater
 than zero for each treatment type}
\item{coef_greater_zero}{The probability that the output value is greater
 than zero for each coefficient}
\item{treat_confidence}{The confidence interva (percent is specified in
 the metadata section) of the input data set of the output value for
 each treatment type}
\item{coef_confidence}{The confidence interva (percent is specified in
 the metadata section) of the input data set of the output value for
 each coefficient}
}
\description{
\code{gen_wrap} allows the user to run an anaylsis on a specific data set.
}
\examples{
# We can run the simulataions and get the result using gen_wrap.
result_afib <- gen_wrap(afib_form)
result_diet <- gen_wrap(diet_form)

# We can then also take the results and convert them into various formats.
# For example to convert into a .json format we can do the following.
output_afib <- toJSON(result_afib, pretty = TRUE, UTC = TRUE, auto_unbox = TRUE, na = NULL)
output_diet <- toJSON(result_diet, pretty = TRUE, UTC = TRUE, auto_unbox = TRUE, na = NULL)
}
